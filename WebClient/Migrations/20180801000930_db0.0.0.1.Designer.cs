// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebClient.Models.Database;

namespace WebClient.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20180801000930_db0.0.0.1")]
    partial class db0001
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebClient.Models.Database.Approval", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ApplicationDate");

                    b.Property<string>("ApprovalNo");

                    b.Property<int>("CompId");

                    b.Property<string>("SlipNo");

                    b.HasKey("Id");

                    b.ToTable("Approvals");
                });

            modelBuilder.Entity("WebClient.Models.Database.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<DateTime>("CreateDateTime");

                    b.Property<string>("CreateUser");

                    b.Property<string>("Name");

                    b.Property<DateTime?>("UpdateDateTime");

                    b.Property<string>("UpdateUser");

                    b.HasKey("Id");

                    b.ToTable("Companys");
                });

            modelBuilder.Entity("WebClient.Models.Database.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId");

                    b.Property<DateTime>("CreateDateTime");

                    b.Property<string>("CreateUser");

                    b.Property<string>("Position");

                    b.Property<DateTime?>("UpdateDateTime");

                    b.Property<string>("UpdateUser");

                    b.Property<int>("UserId");

                    b.Property<string>("UserId1");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("UserId1");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("WebClient.Models.Database.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code");

                    b.Property<byte[]>("Icon");

                    b.Property<string>("Mail");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WebClient.Models.Database.Employee", b =>
                {
                    b.HasOne("WebClient.Models.Database.Company")
                        .WithMany("Employees")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebClient.Models.Database.User")
                        .WithMany("Employees")
                        .HasForeignKey("UserId1");
                });
#pragma warning restore 612, 618
        }
    }
}
